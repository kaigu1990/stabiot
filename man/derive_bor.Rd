% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/onco_resp.R
\name{derive_bor}
\alias{derive_bor}
\title{Derivation of Best Overall Response per RECIST}
\usage{
derive_bor(
  data,
  unique_id = "USUBJID",
  aval_map = getOption("stabiot.aval.mapping"),
  spec_date = "pd_date",
  ref_date = "TRTSDT",
  ref_start_window = 28,
  ref_interval = 28,
  max_ne = 1,
  confirm = FALSE
)
}
\arguments{
\item{data}{(\code{data.frame})\cr a data frame as input, preferably ADRS of the ADaM
standard with few necessary variables, see notes and examples.}

\item{unique_id}{(\code{string})\cr string specifying which column as the unique subject id.}

\item{aval_map}{(\code{tbl} or \code{data.frame})\cr a mapping list between AVALC and AVAL,
default are CR=1, PR=2, SD=3, PD=4 and NE=5. See \code{getOption("stabiot.aval.mapping")}
for more details.}

\item{spec_date}{(\code{string})\cr a date is used to determine whether or not the
responses should be filtered after that specific date. Such as filtering all
responses after the first PD date (pd_date). If NULL, no filtering procedure.}

\item{ref_date}{(\code{string})\cr a date is used to determine the during from the
specific date. Usually it's the treatment start date or randomization date.}

\item{ref_start_window}{(\code{integer})\cr an integer days is used to determine how
many days are required following the reference day (\code{ref_date}) when the responses
occur.}

\item{ref_interval}{(\code{integer})\cr an integer days is used to determine interval
days are required between two assessments.}

\item{max_ne}{(\code{integer})\cr an integer of maximum NE is acceptable between two
assessments.}

\item{confirm}{(\code{logical})\cr a logical indicating of whether the BOR is required
for confirmation.}
}
\value{
A data frame with a new parameter for confirmed or not confirmed best overall response.
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

Derive best overall response (confirmed or not confirmed BOR) according to
RECIST 1.1 from time-point overall responses of CR, PR, SD, PD and NE.
}
\details{
The detailed rule of computing the best overall response (BOR) as shown below.

If the \code{spec_date = "pd_date"} option is selected, only the assessments up
to first PD will be considered to calculate the BOR.

No confirmation is required for BOR:
\enumerate{
\item Set to complete response (CR) if there exists an assessment of CR.
\item Set to partial response (PR) if there exists an assessment of PR.
\item Set to stable disease (SD) if there exists an assessment of SD that is
at least \code{ref_start_window} days after \code{ref_date}.
\item Set to progressive disease (PD) if there exists an assessment of PD.
\item Set to not estimable (NE) if there exists an assessment of NE or the assessment
occurring is less than \code{ref_start_window} days after \code{ref_date}.
}

Confirmation is required for BOR:
\enumerate{
\item Set to complete response (CR) if:
\itemize{
\item there is one confirmatory assessment of CR at least \code{ref_interval} days later,
\item all assessments between two assessment are "CR" or "NE", and
\item there are at most \code{max_ne} NE between two assessments.
}
\item Set to partial response (PR) if:
\itemize{
\item there is one confirmatory assessment of CR or PR at least \code{ref_interval} days later,
\item all assessments between two assessment are "CR", "PR" or "NE", and
\item there are at most \code{max_ne} NE between two PR/CR assessments.
}
\item Set to stable disease (SD) if:
\itemize{
\item there is one CR, PR or SD that is at least \code{ref_start_window} days after \code{ref_date}.
}
\item Set to progressive disease (PD) if:
\itemize{
\item there is one PD.
}
\item Set to not estimable (NE) if:
\itemize{
\item there is at least one CR, PR, SD, NE.
}
}

After executing the previous steps, select the best one using the order 'CR>PR>SD>PD>NE'
for each subject. If the BOR is not unique, the first one (based on ADT) is selected.
}

\note{
\itemize{
\item The \code{ref_start_window} refers to assessment date (ADT) minus \code{ref_date}. For
example, \code{ref_start_window = 28} that means ADT minus TRTSDT should be equal to
or greater than 28 days. And this argument is only used in non-confirmatory/confirmatory
of SD.
\item The \code{ref_interval} refers to confirmatory assessment date minus assessment date.
For example, \code{ref_interval = 28} that means subsequent CR date minus prior CR
should be equal to or greater than 28 days. And this argument is used in confirmatory
of CR/PR.
}
}

\examples{
# This example is referred from `admiral::event_joined`.
adrs <- tibble::tribble(
  ~USUBJID, ~TRTSDTC,     ~ADTC,        ~AVALC,
  "1",      "2020-01-01", "2020-01-01", "PR",
  "1",      "2020-01-01", "2020-02-01", "CR",
  "1",      "2020-01-01", "2020-02-16", "NE",
  "1",      "2020-01-01", "2020-03-01", "CR",
  "1",      "2020-01-01", "2020-04-01", "SD",
  "2",      "2019-12-12", "2020-01-01", "SD",
  "2",      "2019-12-12", "2020-02-01", "PR",
  "2",      "2019-12-12", "2020-03-01", "SD",
  "2",      "2019-12-12", "2020-03-13", "CR",
  "4",      "2019-12-30", "2020-01-01", "PR",
  "4",      "2019-12-30", "2020-03-01", "NE",
  "4",      "2019-12-30", "2020-04-01", "NE",
  "4",      "2019-12-30", "2020-05-01", "PR",
  "5",      "2020-01-01", "2020-01-01", "PR",
  "5",      "2020-01-01", "2020-01-10", "PR",
  "5",      "2020-01-01", "2020-01-20", "PR",
  "6",      "2020-02-02", "2020-02-06", "PR",
  "6",      "2020-02-02", "2020-02-16", "CR",
  "6",      "2020-02-02", "2020-03-30", "PR",
  "7",      "2020-02-02", "2020-02-06", "PR",
  "7",      "2020-02-02", "2020-02-16", "CR",
  "7",      "2020-02-02", "2020-04-01", "NE",
  "8",      "2020-02-01", "2020-02-16", "PD"
) \%>\%
  dplyr::mutate(
    ADT = lubridate::ymd(ADTC),
    TRTSDT = lubridate::ymd(TRTSDTC),
    PARAMCD = "OVR",
    PARAM = "Overall Response by Investigator"
  ) \%>\%
  dplyr::select(-TRTSDTC)

# Derive BOR without confirmation.
derive_bor(data = adrs)

# Derive confirmed BOR.
derive_bor(data = adrs, confirm = TRUE)

# Derive confirmed BOR with no NE is acceptable between two assessments.
derive_bor(data = adrs, max_ne = 0, confirm = TRUE)
}
