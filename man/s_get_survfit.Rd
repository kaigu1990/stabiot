% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarize-survival.R, R/utils.R
\name{s_get_survfit}
\alias{s_get_survfit}
\alias{h_pairwise_survdiff}
\title{Summarize Survival Curves Analysis}
\usage{
s_get_survfit(
  data,
  formula,
  quantile = c(0.25, 0.75),
  time_point = NULL,
  conf_type = c("log-log", "log", "plain"),
  conf_level = 0.95,
  strata = NULL,
  rho = 0,
  pairwise = FALSE,
  ...
)

h_pairwise_survdiff(formula, data, strata = NULL, rho = 0)
}
\arguments{
\item{data}{(\code{data.frame})\cr a data frame as input.}

\item{formula}{(\code{formula})\cr a formula of survival model with survival object.
See more details in \code{\link[survival:survfit.formula]{survival::survfit.formula()}}.}

\item{quantile}{(\code{numeric})\cr a numeric vector specifying the quantile of
survival time, default values are the 0.25 and 0.75 quantiles.}

\item{time_point}{(\code{numeric})\cr a numeric vector representing the survival
time point of interest.}

\item{conf_type}{(\code{string})\cr string specifying the confidence interval for
survival curve, default is log-log. See more details in \code{\link[survival:survfit.formula]{survival::survfit.formula()}}.}

\item{conf_level}{(\code{numeric})\cr significance level for a two-side confidence
interval on survival curve, default is 0.95.}

\item{strata}{(\code{character})\cr a character vector used for stratification.}

\item{rho}{(\code{number})\cr a scalar parameter that controls the method
of comparing survival curves. Default is 0 that is log-rank , others options
can see \code{\link[survival:survdiff]{survival::survdiff()}}.}

\item{pairwise}{(\code{logical})\cr whether to conduct the pairwise comparison.}

\item{...}{other arguments to be passed to \code{\link[survival:survfit]{survival::survfit()}}.}
}
\value{
An object of class \code{s_survival} is a list contains several summary tables
\itemize{
\item \code{surv} list of median and quantiles survival time and CI, overall and time point
survival rates, and range of survival time.
\item \code{surv_diff} list of p-value from \code{survfit} object comparing survival curves, and
the difference of survival rates.
\item \code{params} essential parameters.
}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

This function summarizes Kaplan-Meier model and provides the corresponding
statistical outputs, such as median and percentile survival time, survival
time range, testing survival curve differences with or without stratification,
time-point survival rates and difference of survival rates.
}
\section{Functions}{
\itemize{
\item \code{h_pairwise_survdiff()}: a modified version of \code{\link[survminer:pairwise_survdiff]{survminer::pairwise_survdiff()}}
that can calculate the pairwise comparisons of survival curves regardless of
whether stratification is given.

}}
\note{
This function mainly wraps \code{survival::survfit()} to compute the survival
estimates, and \code{survival::survdiff()} to compute the p-value of comparing
survival curves. The SE and p-value of difference rate are simply computed
using normal distribution and Z statistic.

Stratification can only alter the testing survival curves, therefore there will
be no changes to other outputs when the \code{strata} argument is defined.
}
\examples{
data("whas500")

# reorder the grouping variable
dat <- whas500 \%>\%
  dplyr::mutate(
    AFB = factor(AFB, levels = c(1, 0))
  )

# no grouping
s_get_survfit(data = dat, formula = Surv(LENFOL, FSTAT) ~ 1)

# grouping by AFB
s_get_survfit(data = dat, formula = Surv(LENFOL, FSTAT) ~ AFB)

# specify the time points for survival rate, and AFB=1 as the reference
s_get_survfit(
  data = dat,
  formula = Surv(LENFOL, FSTAT) ~ AFB,
  time_point = c(12, 36, 60)
)

# specify the stratified log-rank test
s_get_survfit(
  data = dat,
  formula = Surv(LENFOL, FSTAT) ~ AFB,
  strata = c("AGE", "GENDER")
)

# dummy three groups
set.seed(123)
subj <- sample(dat$ID, 100)
dat2 <- whas500 \%>\%
  dplyr::mutate(
    AFB = dplyr::case_when(
      ID \%in\% subj ~ 2,
      TRUE ~ AFB
    ),
    AFB = factor(AFB, levels = c(1, 2, 0))
  )

# pairwise comparison
s_get_survfit(
  data = dat2,
  formula = Surv(LENFOL, FSTAT) ~ AFB,
  time_point = c(12, 36, 60),
  pairwise = TRUE
)
}
