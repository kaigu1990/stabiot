% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_event.R, R/pkg-methods.R
\name{s_count_event}
\alias{s_count_event}
\alias{print.count_evt}
\title{Count the Number of Events for Specific Variable}
\usage{
s_count_event(data, var, by = NULL, cond, label = names(cond), denom)

\method{print}{count_evt}(x, ...)
}
\arguments{
\item{data}{(\code{data.frame})\cr a data frame as input.}

\item{var}{(\code{string})\cr target variable name for counting.}

\item{by}{(\code{string})\cr an optional variable to group by. If null, use the whole data.}

\item{cond}{(\code{string})\cr a listing contains multiple types of filtering conditions
that only support the equation such as \code{"TRTEMFL" = "Y"}. And the left side of the
equation is filtering id while the right should be a flag, string or numerical value.}

\item{label}{(\code{string})\cr an optional string vector for labeling each filtering
conditions. Default is the name of \code{cond} variable.}

\item{denom}{(\code{numeric} or \code{data.frame})\cr denominator for proportion can be a
numeric vector of denominators or a data frame where we can count the \code{var} inside.}
}
\value{
\itemize{
\item \code{s_count_event} returns an object of class \code{count_evt} that is a data frame
contains percentages for each group for different conditions.
}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

This function counts the number of events occur for specific variable with
multiple conditions if needed, such as counting the different types of AE
occurrence rates.
}
\section{Functions}{
\itemize{
\item \code{print(count_evt)}: prints the counts and percentages of events.

}}
\note{
\itemize{
\item The order of \code{cond} names should be one-to-one respect to \code{label} you define.
\item The order of \code{denom} names should be one-to-one respect to \code{by} variable levels.
}
}
\examples{
data("rand_adsl")
data("rand_adae")

# by TRTA groups
s_count_event(
  data = rand_adae, var = "SUBJID", by = "ARMCD",
  cond = list(
    "TEAEs" = c("TRTEMFL" = "Y"),
    "TRAEs" = c("TRTEMFL" = "Y", "AEREL" = "Y"),
    "SAE" = c("AESER" = "Y"),
    "TRSAE" = c("AESER" = "Y", "AEREL" = "Y")
  ),
  label = c(
    "Any TEAEs", "Any treatment-related TEAEs",
    "Any serious TEAEs", "Any serious treatment-related TEAEs"
  ),
  denom = rand_adsl
)

# specify the denominator for each groups
s_count_event(
  data = rand_adae, var = "SUBJID", by = "ARMCD",
  cond = list("TEAEs" = c("TRTEMFL" = "Y")),
  label = c("Any TEAEs"),
  denom = c(100, 100, 100)
)

# no grouping
s_count_event(
  data = rand_adae, var = "SUBJID",
  cond = list(
    "TEAEs" = c("TRTEMFL" = "Y"),
    "TRAEs" = c("TRTEMFL" = "Y", "AEREL" = "Y")
  ),
  label = c("Any TEAEs", "Any treatment-related TEAEs"),
  denom = 200
)
}
\keyword{internal}
